// <auto-generated />
using System;
using CarParkApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CarParkApi.Data.Migrations
{
    [DbContext(typeof(CarParkDbContext))]
    [Migration("20251005150306_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CarParkApi.Models.ParkingSpace", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsOccupied")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("is_occupied");

                    b.Property<int>("SpaceNumber")
                        .HasColumnType("integer")
                        .HasColumnName("space_number");

                    b.Property<DateTime?>("TimeIn")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("time_in");

                    b.Property<DateTime?>("TimeOut")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("time_out");

                    b.Property<string>("VehicleReg")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("vehicle_reg");

                    b.Property<string>("VehicleType")
                        .HasColumnType("text")
                        .HasColumnName("vehicle_type");

                    b.HasKey("Id");

                    b.HasIndex("SpaceNumber")
                        .IsUnique();

                    b.HasIndex("VehicleReg")
                        .IsUnique()
                        .HasFilter("vehicle_reg IS NOT NULL");

                    b.ToTable("parking_spaces", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsOccupied = false,
                            SpaceNumber = 1
                        },
                        new
                        {
                            Id = 2,
                            IsOccupied = false,
                            SpaceNumber = 2
                        },
                        new
                        {
                            Id = 3,
                            IsOccupied = false,
                            SpaceNumber = 3
                        },
                        new
                        {
                            Id = 4,
                            IsOccupied = false,
                            SpaceNumber = 4
                        },
                        new
                        {
                            Id = 5,
                            IsOccupied = false,
                            SpaceNumber = 5
                        },
                        new
                        {
                            Id = 6,
                            IsOccupied = false,
                            SpaceNumber = 6
                        },
                        new
                        {
                            Id = 7,
                            IsOccupied = false,
                            SpaceNumber = 7
                        },
                        new
                        {
                            Id = 8,
                            IsOccupied = false,
                            SpaceNumber = 8
                        },
                        new
                        {
                            Id = 9,
                            IsOccupied = false,
                            SpaceNumber = 9
                        },
                        new
                        {
                            Id = 10,
                            IsOccupied = false,
                            SpaceNumber = 10
                        },
                        new
                        {
                            Id = 11,
                            IsOccupied = false,
                            SpaceNumber = 11
                        },
                        new
                        {
                            Id = 12,
                            IsOccupied = false,
                            SpaceNumber = 12
                        },
                        new
                        {
                            Id = 13,
                            IsOccupied = false,
                            SpaceNumber = 13
                        },
                        new
                        {
                            Id = 14,
                            IsOccupied = false,
                            SpaceNumber = 14
                        },
                        new
                        {
                            Id = 15,
                            IsOccupied = false,
                            SpaceNumber = 15
                        },
                        new
                        {
                            Id = 16,
                            IsOccupied = false,
                            SpaceNumber = 16
                        },
                        new
                        {
                            Id = 17,
                            IsOccupied = false,
                            SpaceNumber = 17
                        },
                        new
                        {
                            Id = 18,
                            IsOccupied = false,
                            SpaceNumber = 18
                        },
                        new
                        {
                            Id = 19,
                            IsOccupied = false,
                            SpaceNumber = 19
                        },
                        new
                        {
                            Id = 20,
                            IsOccupied = false,
                            SpaceNumber = 20
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
